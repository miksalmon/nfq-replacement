//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace FileSystem
{
    typedef enum WindowsSearchResultStatus WindowsSearchResultStatus;

    interface IFileExplorer;

    interface IFileExplorerSort;

    interface IFileExplorerSortFactory;

    interface IFileExplorerStatics;

    interface IFileSystemItem;

    interface IWindowsSearch;

    interface IWindowsSearchResult;

    interface IWindowsSearchResultFactory;

    interface IWindowsSearchStatics;

    runtimeclass FileExplorer;

    runtimeclass FileExplorerSort;

    runtimeclass FileSystemItem;

    runtimeclass WindowsSearch;

    runtimeclass WindowsSearchResult;
}

// Generic instantiations
namespace FileSystem
{
    declare
    {
        interface Windows.Foundation.Collections.IIterable<FileSystem.FileExplorerSort*>;

        interface Windows.Foundation.Collections.IIterable<FileSystem.FileSystemItem*>;

        interface Windows.Foundation.Collections.IIterator<FileSystem.FileExplorerSort*>;

        interface Windows.Foundation.Collections.IIterator<FileSystem.FileSystemItem*>;

        interface Windows.Foundation.Collections.IVectorView<FileSystem.FileExplorerSort*>;

        interface Windows.Foundation.Collections.IVectorView<FileSystem.FileSystemItem*>;

        interface Windows.Foundation.Collections.IVector<FileSystem.FileExplorerSort*>;

        interface Windows.Foundation.Collections.IVector<FileSystem.FileSystemItem*>;
    }
}

// Type definition
namespace FileSystem
{
    [version(0x00000001)]
    enum WindowsSearchResultStatus
    {
        Success          = 0,
        Incomplete       = 1,
        FolderNotIndexed = 2,
        UnknownError     = 3
    };

    [exclusiveto(FileSystem.FileExplorer)]
    [uuid(1D6F8BD4-B62F-506E-BA00-AD9705C336A2)]
    [version(0x00000001)]
    interface IFileExplorer : IInspectable
    {
    }

    [exclusiveto(FileSystem.FileExplorerSort)]
    [uuid(D96E4E40-34A4-58D8-83A5-2CAAF99026B0)]
    [version(0x00000001)]
    interface IFileExplorerSort : IInspectable
    {
        [propget] HRESULT PropertyKey([out] [retval] HSTRING* value);
        [propget] HRESULT Ascending([out] [retval] boolean* value);
    }

    [exclusiveto(FileSystem.FileExplorerSort)]
    [uuid(5E311D6D-3756-5BF4-AEEF-62C4B6C18ECE)]
    [version(0x00000001)]
    interface IFileExplorerSortFactory : IInspectable
    {
        HRESULT CreateInstance([in] HSTRING propertyKey, [in] boolean ascending, [out] [retval] FileSystem.FileExplorerSort** value);
    }

    [exclusiveto(FileSystem.FileExplorer)]
    [uuid(D2A90DC2-B1AA-5501-A9B2-52692B02F457)]
    [version(0x00000001)]
    interface IFileExplorerStatics : IInspectable
    {
        HRESULT GetFolder([out] [retval] HSTRING* result);
        HRESULT GetSortColumns([in] HSTRING folderPath, [out] [retval] Windows.Foundation.Collections.IVector<FileSystem.FileExplorerSort*>** result);
    }

    [exclusiveto(FileSystem.FileSystemItem)]
    [uuid(293F02F9-C2D1-5763-B76C-975775AE667C)]
    [version(0x00000001)]
    interface IFileSystemItem : IInspectable
    {
        [propget] HRESULT Name([out] [retval] HSTRING* value);
        [propput] HRESULT Name([in] HSTRING value);
        [propget] HRESULT Path([out] [retval] HSTRING* value);
        [propput] HRESULT Path([in] HSTRING value);
        [propget] HRESULT Type([out] [retval] HSTRING* value);
        [propput] HRESULT Type([in] HSTRING value);
        [propget] HRESULT DateModified([out] [retval] Windows.Foundation.DateTime* value);
        [propput] HRESULT DateModified([in] Windows.Foundation.DateTime value);
        [propget] HRESULT DateCreated([out] [retval] Windows.Foundation.DateTime* value);
        [propput] HRESULT DateCreated([in] Windows.Foundation.DateTime value);
        [propget] HRESULT Size([out] [retval] UINT64* value);
        [propput] HRESULT Size([in] UINT64 value);
        [propget] HRESULT ItemDate([out] [retval] Windows.Foundation.DateTime* value);
        [propput] HRESULT ItemDate([in] Windows.Foundation.DateTime value);
        [propget] HRESULT DateTaken([out] [retval] Windows.Foundation.DateTime* value);
        [propput] HRESULT DateTaken([in] Windows.Foundation.DateTime value);
        [propget] HRESULT Dimensions([out] [retval] HSTRING* value);
        [propput] HRESULT Dimensions([in] HSTRING value);
        [propget] HRESULT Tags([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
        [propput] HRESULT Tags([in] Windows.Foundation.Collections.IVector<HSTRING>* value);
        [propget] HRESULT Rating([out] [retval] UINT32* value);
        [propput] HRESULT Rating([in] UINT32 value);
    }

    [exclusiveto(FileSystem.WindowsSearch)]
    [uuid(67F0F349-2A3C-5D75-884B-2B37CE31961E)]
    [version(0x00000001)]
    interface IWindowsSearch : IInspectable
    {
    }

    [exclusiveto(FileSystem.WindowsSearchResult)]
    [uuid(9379B509-AE6B-5361-BEE2-4C1F57C38E8B)]
    [version(0x00000001)]
    interface IWindowsSearchResult : IInspectable
    {
        [propget] HRESULT Status([out] [retval] FileSystem.WindowsSearchResultStatus* value);
        [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<FileSystem.FileSystemItem*>** value);
    }

    [exclusiveto(FileSystem.WindowsSearchResult)]
    [uuid(23362081-105F-55DA-8863-5577FC0FD7F1)]
    [version(0x00000001)]
    interface IWindowsSearchResultFactory : IInspectable
    {
        HRESULT CreateInstance([in] FileSystem.WindowsSearchResultStatus status, [out] [retval] FileSystem.WindowsSearchResult** value);
        HRESULT CreateInstance2([in] FileSystem.WindowsSearchResultStatus status, [in] Windows.Foundation.Collections.IVector<FileSystem.FileSystemItem*>* items, [out] [retval] FileSystem.WindowsSearchResult** value);
    }

    [exclusiveto(FileSystem.WindowsSearch)]
    [uuid(254FD484-F0F1-5B9E-8FD6-D40444A803F7)]
    [version(0x00000001)]
    interface IWindowsSearchStatics : IInspectable
    {
        HRESULT GetFiles([in] HSTRING folderPath, [out] [retval] FileSystem.WindowsSearchResult** result);
    }

    [marshaling_behavior(agile)]
    [static(FileSystem.IFileExplorerStatics, 0x00000001)]
    [threading(both)]
    [version(0x00000001)]
    runtimeclass FileExplorer
    {
        [default] interface FileSystem.IFileExplorer;
    }

    [activatable(FileSystem.IFileExplorerSortFactory, 0x00000001)]
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(0x00000001)]
    runtimeclass FileExplorerSort
    {
        [default] interface FileSystem.IFileExplorerSort;
    }

    [activatable(0x00000001)]
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(0x00000001)]
    runtimeclass FileSystemItem
    {
        [default] interface FileSystem.IFileSystemItem;
    }

    [marshaling_behavior(agile)]
    [static(FileSystem.IWindowsSearchStatics, 0x00000001)]
    [threading(both)]
    [version(0x00000001)]
    runtimeclass WindowsSearch
    {
        [default] interface FileSystem.IWindowsSearch;
    }

    [activatable(FileSystem.IWindowsSearchResultFactory, 0x00000001)]
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(0x00000001)]
    runtimeclass WindowsSearchResult
    {
        [default] interface FileSystem.IWindowsSearchResult;
    }
}
